// (page_472)exercise_8.cpp : Defines the entry point for the console application.
/*
8.	Исправьте функцию additem() из программы LINKLIST так, чтобы она до-
бавляла новый элемент в конец списка, а не в начало. Это будет означать,
что первый вставленный элемент будет выведен первым и результат рабо-
ты программы будет следующим:
25
36
49
64
Для того чтобы добавить элемент, вам необходимо будет пройти по цепи
до конца списка, а затем изменить указатель последнего элемента так, что-
бы он указывал на новый элемент.
*/

#include "stdafx.h"
#include <iostream>

///////////////////////////////////////////////////////////
struct link   // один элемент списка
{
	int data;   // некоторые данные
	link* next; // указатель на следующую структуру
};
///////////////////////////////////////////////////////////
class linklist // список
{
private:
	link* first;
	link* last;
public:
	linklist()            // конструктор без параметров
	{	
		last = NULL;
		first = NULL;
	}   // первого элемента пока нет
	void additem(int d);  // добавление элемента
	void display();       // показ данных
};
///////////////////////////////////////////////////////////
void linklist::additem(int d)    // добавление элемента в конец списка
{
	link* newlink;         // создаем переменненую
	newlink = new link;    // выделяем память
	newlink->next = first; // записываем адрес предыдущей переменной
	
	link* backCikle = newlink;
	while (backCikle) {					// спускаемся к первой переменной
		if (backCikle->next == NULL)    // если мы на первой переменной
			backCikle->data = d;		// записываем значение
		else							// если не на первой
			backCikle->data = backCikle->next->data; // забираем данные в переменную
		backCikle = backCikle->next;	// записываем адрес предыдущей переменной для дальнейшей работы или выходе из цикла по значению null
	}
	first = newlink; // указываем адрес переменной как предыдцщий	
}
///////////////////////////////////////////////////////////
void linklist::display()
{
	link* current = first;           // начинаем с первого элемента
	while (current)                   // пока есть данные
	{
		std::cout << current->data << std::endl; // печатаем данные
		current = current->next;       // двигаемся к следующему элементу
	}
}
///////////////////////////////////////////////////////////
int main() 
{
	linklist li;       // создаем переменную-список

	li.additem(25);    // добавляем туда несколько чисел
	li.additem(36);
	li.additem(49);
	li.additem(64);

	li.display();      // показываем список

	system("pause");
	return 0;
}